name: Minimalest CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        env:
          SPRING_PROFILES_ACTIVE: prod
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_DB_NAME: ${{ secrets.MYSQL_DB_NAME }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_S3_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
          AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_CLOUDFRONT_DOMAIN: ${{ secrets.AWS_CLOUDFRONT_DOMAIN }}
          AWS_LAMBDA_THUMBNAIL_GENERATE_TRIGGER_URL: ${{ secrets.AWS_LAMBDA_THUMBNAIL_GENERATE_TRIGGER_URL }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          OAUTH_GOOGLE_CLIENT_ID: ${{ secrets.OAUTH_GOOGLE_CLIENT_ID }}
          OAUTH_GOOGLE_CLIENT_SECRET: ${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET }}
          OAUTH_GOOGLE_REDIRECT_URI: ${{ secrets.OAUTH_GOOGLE_REDIRECT_URI }}
          SERVER_SSL_KEY_STORE: ${{ secrets.SERVER_SSL_KEY_STORE }}
          SERVER_SSL_KEY_ALIAS: ${{ secrets.SERVER_SSL_KEY_ALIAS }}
          SERVER_SSL_KEY_STORE_PASSWORD: ${{ secrets.SERVER_SSL_KEY_STORE_PASSWORD }}
          SERVER_SSL_KEY_STORE_TYPE: ${{ secrets.SERVER_SSL_KEY_STORE_TYPE }}
        run: |
          echo AWS_S3_REGION : $AWS_S3_REGION 
          ./gradlew clean build

      - name: Upload jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download jar artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: build/libs

      - name: Login docker hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/minimalest-api:latest
          build-args: |
            MYSQL_URL=${{ secrets.MYSQL_URL }}
            MYSQL_PORT=${{ secrets.MYSQL_PORT }}
            MYSQL_DB_NAME=${{ secrets.MYSQL_DB_NAME }}
            MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }}
            AWS_S3_SECRET_KEY=${{ secrets.AWS_S3_SECRET_KEY }}
            AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}
            AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
            AWS_CLOUDFRONT_DOMAIN=${{ secrets.AWS_CLOUDFRONT_DOMAIN }}
            AWS_LAMBDA_THUMBNAIL_GENERATE_TRIGGER_URL=${{ secrets.AWS_LAMBDA_THUMBNAIL_GENERATE_TRIGGER_URL }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            OAUTH_GOOGLE_CLIENT_ID=${{ secrets.OAUTH_GOOGLE_CLIENT_ID }}
            OAUTH_GOOGLE_CLIENT_SECRET=${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET }}
            OAUTH_GOOGLE_REDIRECT_URI=${{ secrets.OAUTH_GOOGLE_REDIRECT_URI }}
            SERVER_SSL_KEY_STORE=${{ secrets.SERVER_SSL_KEY_STORE }}
            SERVER_SSL_KEY_ALIAS=${{ secrets.SERVER_SSL_KEY_ALIAS }}
            SERVER_SSL_KEY_STORE_PASSWORD=${{ secrets.SERVER_SSL_KEY_STORE_PASSWORD }}
            SERVER_SSL_KEY_STORE_TYPE=${{ secrets.SERVER_SSL_KEY_STORE_TYPE }}
